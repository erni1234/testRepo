///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace smokeTest
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The AddUsers recording.
    /// </summary>
    [TestModule("94d33a3d-6e09-4397-bdbb-c70b8404a210", ModuleType.Recording, 1)]
    public partial class AddUsers : ITestModule
    {
        /// <summary>
        /// Holds an instance of the userRepo repository.
        /// </summary>
        public static userRepo repo = userRepo.Instance;

        static AddUsers instance = new AddUsers();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public AddUsers()
        {
            Username = "";
            Password = "";
            ConfirmPassword = "";
            Fullname = "";
            Membership = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static AddUsers Instance
        {
            get { return instance; }
        }

#region Variables

        string _Username;

        /// <summary>
        /// Gets or sets the value of variable Username.
        /// </summary>
        [TestVariable("b7687d48-0bcc-4993-a0c2-d14b9d1f9c98")]
        public string Username
        {
            get { return _Username; }
            set { _Username = value; }
        }

        string _Password;

        /// <summary>
        /// Gets or sets the value of variable Password.
        /// </summary>
        [TestVariable("722d963b-7032-49af-ad34-5c45a5e2aeb3")]
        public string Password
        {
            get { return _Password; }
            set { _Password = value; }
        }

        string _ConfirmPassword;

        /// <summary>
        /// Gets or sets the value of variable ConfirmPassword.
        /// </summary>
        [TestVariable("c921a3af-2fd7-4a38-a2d1-0cd35a8c81b0")]
        public string ConfirmPassword
        {
            get { return _ConfirmPassword; }
            set { _ConfirmPassword = value; }
        }

        string _Fullname;

        /// <summary>
        /// Gets or sets the value of variable Fullname.
        /// </summary>
        [TestVariable("5866f0eb-36cf-4df4-ac8e-8297f093913b")]
        public string Fullname
        {
            get { return _Fullname; }
            set { _Fullname = value; }
        }

        string _Membership;

        /// <summary>
        /// Gets or sets the value of variable Membership.
        /// </summary>
        [TestVariable("2a4059eb-28ea-4fd3-bfdc-51f3c5464da5")]
        public string Membership
        {
            get { return _Membership; }
            set { _Membership = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.1")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.1")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'WebDocument192168250180.Users' at 30;6.", repo.WebDocument192168250180.UsersInfo, new RecordItemIndex(0));
            repo.WebDocument192168250180.Users.Click("30;6");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'WebDocument192168250180.MainContentLeft.Add' at 12;11.", repo.WebDocument192168250180.MainContentLeft.AddInfo, new RecordItemIndex(1));
            repo.WebDocument192168250180.MainContentLeft.Add.Click("12;11");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{END}{SHIFT DOWN}{HOME}{SHIFT UP}{DELETE}' with focus on 'WebDocument192168250180.Name1'.", repo.WebDocument192168250180.Name1Info, new RecordItemIndex(2));
            repo.WebDocument192168250180.Name1.PressKeys("{END}{SHIFT DOWN}{HOME}{SHIFT UP}{DELETE}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Username' with focus on 'WebDocument192168250180.Name1'.", repo.WebDocument192168250180.Name1Info, new RecordItemIndex(3));
            repo.WebDocument192168250180.Name1.PressKeys(Username);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Password' with focus on 'WebDocument192168250180.Password'.", repo.WebDocument192168250180.PasswordInfo, new RecordItemIndex(4));
            repo.WebDocument192168250180.Password.PressKeys(Password);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$ConfirmPassword' with focus on 'WebDocument192168250180.ConfirmPassword'.", repo.WebDocument192168250180.ConfirmPasswordInfo, new RecordItemIndex(5));
            repo.WebDocument192168250180.ConfirmPassword.PressKeys(ConfirmPassword);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Fullname' with focus on 'WebDocument192168250180.Fullname'.", repo.WebDocument192168250180.FullnameInfo, new RecordItemIndex(6));
            repo.WebDocument192168250180.Fullname.PressKeys(Fullname);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse scroll Vertical by -960 units.", new RecordItemIndex(7));
            Mouse.ScrollWheel(-960);
            Delay.Milliseconds(500);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Membership' with focus on 'WebDocument192168250180.GroupID'.", repo.WebDocument192168250180.GroupIDInfo, new RecordItemIndex(8));
            repo.WebDocument192168250180.GroupID.PressKeys(Membership);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'WebDocument192168250180.PullRightBtnBtnDefaultNgIsolateSc' at 10;4.", repo.WebDocument192168250180.PullRightBtnBtnDefaultNgIsolateScInfo, new RecordItemIndex(9));
            repo.WebDocument192168250180.PullRightBtnBtnDefaultNgIsolateSc.Click("10;4");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'WebDocument192168250180.Save' at 0;14.", repo.WebDocument192168250180.SaveInfo, new RecordItemIndex(10));
            repo.WebDocument192168250180.Save.Click("0;14");
            Delay.Milliseconds(200);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
