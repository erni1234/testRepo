///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace smokeTest
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The AddNetModuls recording.
    /// </summary>
    [TestModule("165560a2-bce7-4d39-83b4-66136c79f494", ModuleType.Recording, 1)]
    public partial class AddNetModuls : ITestModule
    {
        /// <summary>
        /// Holds an instance of the smokeTestRepository repository.
        /// </summary>
        public static smokeTestRepository repo = smokeTestRepository.Instance;

        static AddNetModuls instance = new AddNetModuls();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public AddNetModuls()
        {
            IOSensorName = "";
            IOModuleType = "";
            IPAddress = "";
            PortNumber = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static AddNetModuls Instance
        {
            get { return instance; }
        }

#region Variables

        string _IOSensorName;

        /// <summary>
        /// Gets or sets the value of variable IOSensorName.
        /// </summary>
        [TestVariable("6d30d32f-cf4b-4350-bf80-ab4da4984dce")]
        public string IOSensorName
        {
            get { return _IOSensorName; }
            set { _IOSensorName = value; }
        }

        string _IOModuleType;

        /// <summary>
        /// Gets or sets the value of variable IOModuleType.
        /// </summary>
        [TestVariable("4e75aee4-d21c-4dd0-b53e-5e409d6a947e")]
        public string IOModuleType
        {
            get { return _IOModuleType; }
            set { _IOModuleType = value; }
        }

        string _IPAddress;

        /// <summary>
        /// Gets or sets the value of variable IPAddress.
        /// </summary>
        [TestVariable("b278e2e2-da96-494d-8eff-0e039f8877b1")]
        public string IPAddress
        {
            get { return _IPAddress; }
            set { _IPAddress = value; }
        }

        string _PortNumber;

        /// <summary>
        /// Gets or sets the value of variable PortNumber.
        /// </summary>
        [TestVariable("ee0b68b4-fc93-4aba-a648-e1d1b7f79c0f")]
        public string PortNumber
        {
            get { return _PortNumber; }
            set { _PortNumber = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.1")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.1")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ElproMONITORLogin.NavDeviceSettingsIndex' at 67;19.", repo.ElproMONITORLogin.NavDeviceSettingsIndexInfo, new RecordItemIndex(0));
            repo.ElproMONITORLogin.NavDeviceSettingsIndex.Click("67;19");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ElproMONITORLogin.NavDeviceSettingsIoModules' at 69;19.", repo.ElproMONITORLogin.NavDeviceSettingsIoModulesInfo, new RecordItemIndex(1));
            repo.ElproMONITORLogin.NavDeviceSettingsIoModules.Click("69;19");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ElproMONITORLogin.ContentCenter.AddNewIOModule' at Center.", repo.ElproMONITORLogin.ContentCenter.AddNewIOModuleInfo, new RecordItemIndex(2));
            repo.ElproMONITORLogin.ContentCenter.AddNewIOModule.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{END}{SHIFT DOWN}{HOME}{SHIFT UP}{DELETE}' with focus on 'ElproMONITORLogin.Name'.", repo.ElproMONITORLogin.NameInfo, new RecordItemIndex(3));
            repo.ElproMONITORLogin.Name.PressKeys("{END}{SHIFT DOWN}{HOME}{SHIFT UP}{DELETE}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$IOSensorName' with focus on 'ElproMONITORLogin.Name'.", repo.ElproMONITORLogin.NameInfo, new RecordItemIndex(4));
            repo.ElproMONITORLogin.Name.PressKeys(IOSensorName);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$IOModuleType' with focus on 'ElproMONITORLogin.ModuleType'.", repo.ElproMONITORLogin.ModuleTypeInfo, new RecordItemIndex(5));
            repo.ElproMONITORLogin.ModuleType.PressKeys(IOModuleType);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$IPAddress' with focus on 'ElproMONITORLogin.IpAddress'.", repo.ElproMONITORLogin.IpAddressInfo, new RecordItemIndex(6));
            repo.ElproMONITORLogin.IpAddress.PressKeys(IPAddress);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{END}{SHIFT DOWN}{HOME}{SHIFT UP}{DELETE}' with focus on 'ElproMONITORLogin.Port'.", repo.ElproMONITORLogin.PortInfo, new RecordItemIndex(7));
            repo.ElproMONITORLogin.Port.PressKeys("{END}{SHIFT DOWN}{HOME}{SHIFT UP}{DELETE}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$PortNumber' with focus on 'ElproMONITORLogin.Port'.", repo.ElproMONITORLogin.PortInfo, new RecordItemIndex(8));
            repo.ElproMONITORLogin.Port.PressKeys(PortNumber);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ElproMONITORLogin.BtnPingEcologNet' at Center.", repo.ElproMONITORLogin.BtnPingEcologNetInfo, new RecordItemIndex(9));
            repo.ElproMONITORLogin.BtnPingEcologNet.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 10s.", new RecordItemIndex(10));
            Delay.Duration(10000, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ElproMONITORLogin.Save' at 21;18.", repo.ElproMONITORLogin.SaveInfo, new RecordItemIndex(11));
            repo.ElproMONITORLogin.Save.Click("21;18");
            Delay.Milliseconds(200);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ElproMONITORLogin.Close' at Center.", repo.ElproMONITORLogin.CloseInfo, new RecordItemIndex(12));
            //repo.ElproMONITORLogin.Close.Click();
            //Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "User", "Net Moduls addedd successfully", new RecordItemIndex(13));
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
