///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace smokeTest
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The AddProModules recording.
    /// </summary>
    [TestModule("16766d13-82cc-4999-9acd-8b5c735f712c", ModuleType.Recording, 1)]
    public partial class AddProModules : ITestModule
    {
        /// <summary>
        /// Holds an instance of the smokeTestRepository repository.
        /// </summary>
        public static smokeTestRepository repo = smokeTestRepository.Instance;

        static AddProModules instance = new AddProModules();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public AddProModules()
        {
            IOmoduleName = "";
            IOmoduleType = "";
            IPaddress = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static AddProModules Instance
        {
            get { return instance; }
        }

#region Variables

        string _IOmoduleName;

        /// <summary>
        /// Gets or sets the value of variable IOmoduleName.
        /// </summary>
        [TestVariable("020b95dd-b9a2-4abf-b744-a9630bc4bd03")]
        public string IOmoduleName
        {
            get { return _IOmoduleName; }
            set { _IOmoduleName = value; }
        }

        string _IOmoduleType;

        /// <summary>
        /// Gets or sets the value of variable IOmoduleType.
        /// </summary>
        [TestVariable("8922a491-2e7f-4f87-a903-1b60d7baaac5")]
        public string IOmoduleType
        {
            get { return _IOmoduleType; }
            set { _IOmoduleType = value; }
        }

        string _IPaddress;

        /// <summary>
        /// Gets or sets the value of variable IPaddress.
        /// </summary>
        [TestVariable("5c6dfe66-e1c3-4862-9464-1df798c881ca")]
        public string IPaddress
        {
            get { return _IPaddress; }
            set { _IPaddress = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.1")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.1")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ElproMONITORLogin.NavDeviceSettingsIndex' at 68;21.", repo.ElproMONITORLogin.NavDeviceSettingsIndexInfo, new RecordItemIndex(0));
            repo.ElproMONITORLogin.NavDeviceSettingsIndex.Click("68;21");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ElproMONITORLogin.NavDeviceSettingsIoModules' at 74;16.", repo.ElproMONITORLogin.NavDeviceSettingsIoModulesInfo, new RecordItemIndex(1));
            repo.ElproMONITORLogin.NavDeviceSettingsIoModules.Click("74;16");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ElproMONITORLogin.ContentCenter.AddNewIOModule' at 75;15.", repo.ElproMONITORLogin.ContentCenter.AddNewIOModuleInfo, new RecordItemIndex(2));
            repo.ElproMONITORLogin.ContentCenter.AddNewIOModule.Click("75;15");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{END}{SHIFT DOWN}{HOME}{SHIFT UP}{DELETE}' with focus on 'ElproMONITORLogin.Name'.", repo.ElproMONITORLogin.NameInfo, new RecordItemIndex(3));
            repo.ElproMONITORLogin.Name.PressKeys("{END}{SHIFT DOWN}{HOME}{SHIFT UP}{DELETE}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$IOmoduleName' with focus on 'ElproMONITORLogin.Name'.", repo.ElproMONITORLogin.NameInfo, new RecordItemIndex(4));
            repo.ElproMONITORLogin.Name.PressKeys(IOmoduleName);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$IOmoduleType' with focus on 'ElproMONITORLogin.ModuleType'.", repo.ElproMONITORLogin.ModuleTypeInfo, new RecordItemIndex(5));
            repo.ElproMONITORLogin.ModuleType.PressKeys(IOmoduleType);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$IPaddress' with focus on 'ElproMONITORLogin.EcologProIpAddress'.", repo.ElproMONITORLogin.EcologProIpAddressInfo, new RecordItemIndex(6));
            repo.ElproMONITORLogin.EcologProIpAddress.PressKeys(IPaddress);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ElproMONITORLogin.BtnScanBridge' at 86;15.", repo.ElproMONITORLogin.BtnScanBridgeInfo, new RecordItemIndex(7));
            repo.ElproMONITORLogin.BtnScanBridge.Click("86;15");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 30s.", new RecordItemIndex(8));
            Delay.Duration(30000, false);
            
            //Report.Log(ReportLevel.Info, "Wait", "Waiting 15s to exist. Associated repository item: 'ElproMONITORLogin.PluginEditForm.SpanTagID0105ECOLOGPRO2TH'", repo.ElproMONITORLogin.PluginEditForm.SpanTagID0105ECOLOGPRO2THInfo, new ActionTimeout(15000), new RecordItemIndex(9));
            //repo.ElproMONITORLogin.PluginEditForm.SpanTagID0105ECOLOGPRO2THInfo.WaitForExists(15000);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ElproMONITORLogin.Save' at 25;17.", repo.ElproMONITORLogin.SaveInfo, new RecordItemIndex(10));
            repo.ElproMONITORLogin.Save.Click("25;17");
            Delay.Milliseconds(200);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ElproMONITORLogin.AddNewIOModule' at 106;23.", repo.ElproMONITORLogin.AddNewIOModuleInfo, new RecordItemIndex(11));
            //repo.ElproMONITORLogin.AddNewIOModule.Click("106;23");
            //Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "User", "LBR Moduls added successfully", new RecordItemIndex(12));
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
